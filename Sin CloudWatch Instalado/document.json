{
  "schemaVersion": "2.2",
  "description": "Install and configure CloudWatch Agent on Debian/Ubuntu instances",
  "parameters": {
    "logGroupPrefix": {
      "type": "String",
      "description": "Prefix for CloudWatch Log Groups",
      "default": "/aws/ec2"
    },
    "metricsNamespace": {
      "type": "String",
      "description": "CloudWatch Metrics namespace",
      "default": "CWAgent"
    },
    "includeSystemLogs": {
      "type": "String",
      "description": "Include system logs (syslog)",
      "default": "true",
      "allowedValues": [
        "true",
        "false"
      ]
    }
  },
  "mainSteps": [
    {
      "action": "aws:runShellScript",
      "name": "InstallCloudWatchAgent",
      "inputs": {
        "timeoutSeconds": "600",
        "runCommand": [
          "#!/bin/bash",
          "set -e",
          "",
          "# Configure non-interactive mode for package installations",
          "export DEBIAN_FRONTEND=noninteractive",
          "export DEBCONF_NONINTERACTIVE_SEEN=true",
          "",
          "# Log function",
          "log() {",
          "    echo \"$(date '+%Y-%m-%d %H:%M:%S') - $1\"",
          "}",
          "",
          "log \"Starting CloudWatch Agent installation...\"",
          "",
          "# Update system packages",
          "log \"Updating system packages...\"",
          "apt-get update -y",
          "",
          "# Install required dependencies",
          "log \"Installing dependencies...\"",
          "apt-get install -y -q curl wget gnupg2 software-properties-common rsyslog",
          "",
          "# Configure rsyslog for system logs",
          "if [ \"{{includeSystemLogs}}\" = \"true\" ]; then",
          "    log \"Configuring rsyslog...\"",
          "    systemctl enable rsyslog",
          "    systemctl start rsyslog",
          "    ",
          "    # Ensure syslog file exists with proper permissions",
          "    touch /var/log/syslog",
          "    chmod 644 /var/log/syslog",
          "    ",
          "    # Check if syslog user exists, if not use root",
          "    if id \"syslog\" &>/dev/null; then",
          "        chown syslog:syslog /var/log/syslog",
          "        log \"Set syslog file ownership to syslog user\"",
          "    else",
          "        chown root:root /var/log/syslog",
          "        log \"Set syslog file ownership to root (syslog user not found)\"",
          "    fi",
          "    ",
          "    log \"Rsyslog configured successfully\"",
          "fi",
          "",
          "# Download CloudWatch Agent",
          "log \"Downloading CloudWatch Agent...\"",
          "wget -q -O /tmp/amazon-cloudwatch-agent.deb https://s3.amazonaws.com/amazoncloudwatch-agent/debian/amd64/latest/amazon-cloudwatch-agent.deb",
          "",
          "# Install CloudWatch Agent in non-interactive mode",
          "log \"Installing CloudWatch Agent...\"",
          "dpkg -i /tmp/amazon-cloudwatch-agent.deb || apt-get install -f -y",
          "",
          "# Enable CloudWatch Agent service",
          "systemctl enable amazon-cloudwatch-agent",
          "",
          "# Create configuration directory",
          "mkdir -p /opt/aws/amazon-cloudwatch-agent/etc",
          "",
          "# Get instance ID for configuration",
          "INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)",
          "",
          "# Generate CloudWatch Agent configuration",
          "log \"Creating CloudWatch Agent configuration...\"",
          "cat > /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json << EOF",
          "{",
          "    \"agent\": {",
          "        \"metrics_collection_interval\": 60,",
          "        \"run_as_user\": \"cwagent\"",
          "    },",
          "    \"logs\": {",
          "        \"logs_collected\": {",
          "            \"files\": {",
          "                \"collect_list\": [",
          "                    {",
          "                        \"file_path\": \"/var/log/syslog\",",
          "                        \"log_group_name\": \"{{logGroupPrefix}}/${INSTANCE_ID}/syslog\",",
          "                        \"log_stream_name\": \"syslog\",",
          "                        \"timezone\": \"UTC\"",
          "                    }",
          "                ]",
          "            }",
          "        }",
          "    },",
          "    \"metrics\": {",
          "        \"namespace\": \"{{metricsNamespace}}\",",
          "        \"metrics_collected\": {",
          "            \"cpu\": {",
          "                \"measurement\": [",
          "                    \"cpu_usage_idle\",",
          "                    \"cpu_usage_iowait\",",
          "                    \"cpu_usage_user\",",
          "                    \"cpu_usage_system\"",
          "                ],",
          "                \"metrics_collection_interval\": 60,",
          "                \"totalcpu\": false",
          "            },",
          "            \"disk\": {",
          "                \"measurement\": [",
          "                    \"used_percent\"",
          "                ],",
          "                \"metrics_collection_interval\": 60,",
          "                \"resources\": [",
          "                    \"*\"",
          "                ]",
          "            },",
          "            \"diskio\": {",
          "                \"measurement\": [",
          "                    \"io_time\"",
          "                ],",
          "                \"metrics_collection_interval\": 60,",
          "                \"resources\": [",
          "                    \"*\"",
          "                ]",
          "            },",
          "            \"mem\": {",
          "                \"measurement\": [",
          "                    \"mem_used_percent\"",
          "                ],",
          "                \"metrics_collection_interval\": 60",
          "            },",
          "            \"netstat\": {",
          "                \"measurement\": [",
          "                    \"tcp_established\",",
          "                    \"tcp_time_wait\"",
          "                ],",
          "                \"metrics_collection_interval\": 60",
          "            },",
          "            \"swap\": {",
          "                \"measurement\": [",
          "                    \"swap_used_percent\"",
          "                ],",
          "                \"metrics_collection_interval\": 60",
          "            }",
          "        }",
          "    }",
          "}",
          "EOF",
          "",
          "# Start CloudWatch Agent with configuration",
          "log \"Starting CloudWatch Agent...\"",
          "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \\",
          "    -a fetch-config \\",
          "    -m ec2 \\",
          "    -s \\",
          "    -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json",
          "",
          "# Verify agent status",
          "sleep 10",
          "AGENT_STATUS=$(systemctl is-active amazon-cloudwatch-agent)",
          "if [ \"$AGENT_STATUS\" = \"active\" ]; then",
          "    log \"CloudWatch Agent is running successfully\"",
          "else",
          "    log \"WARNING: CloudWatch Agent may not be running properly\"",
          "    systemctl status amazon-cloudwatch-agent --no-pager",
          "    # Try to get more detailed status",
          "    /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \\",
          "        -m ec2 -a query-config || true",
          "fi",
          "",
          "# Clean up downloaded packages",
          "rm -f /tmp/amazon-cloudwatch-agent.deb",
          "",
          "# Final verification and output",
          "log \"Checking CloudWatch Agent configuration...\"",
          "/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl \\",
          "    -m ec2 -c default -a query-config || true",
          "",
          "log \"CloudWatch Agent installation completed successfully!\"",
          "log \"Log Group: {{logGroupPrefix}}/${INSTANCE_ID}/syslog\"",
          "log \"Metrics Namespace: {{metricsNamespace}}\"",
          "",
          "# Reset DEBIAN_FRONTEND",
          "unset DEBIAN_FRONTEND"
        ]
      }
    }
  ]
}